name: Docker - ghcr Build and Push

on:
  push:
    schedule:
      - cron: "0 10 * * *"
    branches:
      - "release/**"
    tags:
      - "v*.*.*"

jobs:
  docker-non-release:
    runs-on: ubuntu-latest
    environment: interchain_comms
    steps:
      - name: slack - GitHub Actions Slack integration
        uses: act10ns/slack@v1.5.0
        with:
          status: ${{ job.status }}
          channel: "#cosmos-hub-github-actions"
          steps: ${{ toJson(steps) }}
          message: Gaia - Publishing docker images to GitHub Container Registry
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/cosmos/gaia
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        id: setup-qemu-action
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: setup-buildx-action
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        id: login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
